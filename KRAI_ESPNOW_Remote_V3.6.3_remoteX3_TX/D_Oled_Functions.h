U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
//U8G2_SSD1306_128X64_NONAME_F_4W_SW_SPI u8g2(U8G2_R0, /* clock=*/ 22, /* data=*/ 23, /* cs=*/ U8X8_PIN_NONE, /* dc=*/ 21, /* reset=*/ 19);

const unsigned char polinesLogo [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x1f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x7c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x20, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xf8, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0xc0, 0x0f, 0x00, 0x00, 
  0x00, 0x01, 0x10, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x40, 0x02, 0x1f, 0x00, 0x00, 
  0x00, 0x04, 0x40, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x58, 0x02, 0x3c, 0x00, 0x00, 
  0x80, 0x08, 0x60, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x55, 0x07, 0x70, 0x00, 0x00, 
  0x00, 0x20, 0x20, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc1, 0x54, 0x87, 0xe0, 0x00, 0x00, 
  0x00, 0x40, 0x40, 0x00, 0x10, 0x01, 0x00, 0x00, 0x00, 0xe0, 0xc0, 0x07, 0xcc, 0xc1, 0x01, 0x00, 
  0x00, 0x80, 0xc0, 0x80, 0xff, 0x06, 0x00, 0x00, 0x00, 0x70, 0xb8, 0x00, 0x40, 0x83, 0x03, 0x00, 
  0x00, 0x02, 0x81, 0x40, 0x70, 0x1e, 0x00, 0x00, 0x00, 0x38, 0x18, 0x00, 0x80, 0x0d, 0x07, 0x00, 
  0x00, 0x04, 0x06, 0x20, 0xc0, 0x3e, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x16, 0x0e, 0x00, 
  0x00, 0x08, 0x0e, 0x30, 0x80, 0xf7, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x82, 0x20, 0x1a, 0x1e, 0x00, 
  0x00, 0x10, 0x13, 0x11, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x4f, 0x0f, 0x83, 0x20, 0x04, 0x3c, 0x00, 
  0x00, 0x20, 0x31, 0x10, 0x00, 0xb6, 0x0d, 0x00, 0x80, 0xc7, 0x40, 0x83, 0xb0, 0x70, 0x78, 0x00, 
  0x00, 0x80, 0x40, 0x0a, 0x03, 0xe4, 0x3e, 0x00, 0xc0, 0x03, 0x63, 0x83, 0x30, 0x59, 0xf0, 0x00, 
  0x00, 0x00, 0x87, 0x0e, 0x06, 0x84, 0xd0, 0x00, 0xf0, 0xe1, 0x60, 0x83, 0xb0, 0x79, 0xe0, 0x01, 
  0x00, 0x00, 0x82, 0x07, 0x0e, 0x80, 0xd3, 0x00, 0x60, 0x80, 0x61, 0x02, 0xb0, 0x11, 0xc0, 0x03, 
  0x00, 0x00, 0xc4, 0x1b, 0x1e, 0x80, 0x04, 0x00, 0xe0, 0x40, 0xe0, 0x20, 0xc1, 0xc1, 0x80, 0x01, 
  0x00, 0x00, 0xe8, 0x1b, 0x3e, 0x88, 0x1c, 0x00, 0xe0, 0xa0, 0xe8, 0xa0, 0xc7, 0x25, 0xc1, 0x01, 
  0x00, 0x80, 0x74, 0x36, 0x38, 0x88, 0x29, 0x00, 0xe0, 0xa0, 0xc8, 0xf1, 0xc7, 0xc4, 0xc0, 0x01, 
  0x00, 0x40, 0x28, 0xec, 0x04, 0x80, 0x08, 0x00, 0xc0, 0x40, 0x98, 0xf9, 0x47, 0x06, 0xc0, 0x01, 
  0x00, 0x40, 0x70, 0x1c, 0x1f, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x78, 0x98, 0x0e, 0xc7, 0xc1, 0x00, 
  0x00, 0x40, 0xf4, 0x36, 0xe2, 0x01, 0x00, 0x00, 0xc0, 0xe0, 0xf0, 0xfc, 0xcf, 0x07, 0xc1, 0x00, 
  0x00, 0x00, 0xd6, 0xe3, 0x23, 0x00, 0x00, 0x00, 0xc0, 0xe1, 0xf4, 0x7d, 0xcf, 0x4b, 0xc0, 0x00, 
  0x00, 0x00, 0x9e, 0x41, 0x61, 0x00, 0x00, 0x00, 0xc0, 0xe1, 0xcd, 0xfd, 0xef, 0xc8, 0xc1, 0x00, 
  0x00, 0x00, 0x88, 0x54, 0x93, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x38, 0xfc, 0x0f, 0x0e, 0xe0, 0x00, 
  0x00, 0x00, 0xf8, 0x60, 0x9e, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf8, 0xf9, 0xe7, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0xf2, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf0, 0xf7, 0xfb, 0x03, 0xe0, 0x00, 
  0x00, 0x00, 0x19, 0x85, 0x73, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xc0, 0x87, 0xf8, 0x00, 0xe0, 0x00, 
  0x00, 0x80, 0x0c, 0x85, 0xe1, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x80, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x80, 0x07, 0x4f, 0xca, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x98, 0x0e, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x9c, 0x51, 0xc4, 0x00, 0x00, 0x00, 0x80, 0x03, 0xd0, 0x9f, 0xfe, 0x06, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x31, 0x6f, 0x03, 0x00, 0x00, 0x80, 0x03, 0xd8, 0x9f, 0xfe, 0x0f, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0xe5, 0x1f, 0x06, 0x00, 0x00, 0x00, 0x03, 0xd8, 0xdf, 0xfe, 0x0f, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0xe0, 0xcf, 0x05, 0x00, 0x00, 0x00, 0x07, 0xd8, 0x1f, 0xfe, 0x0f, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0xc0, 0x87, 0x0f, 0x00, 0x00, 0x00, 0x07, 0x98, 0x1f, 0x3e, 0x0b, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xc1, 0x3f, 0x00, 0x00, 0x00, 0x0e, 0xc0, 0x13, 0xfa, 0x01, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1e, 0x1e, 0x00, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf8, 0x43, 0x07, 0x00, 0x00, 0x1c, 0x0c, 0x00, 0x00, 0x00, 0x0e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x03, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xec, 0x00, 0x80, 0x0d, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xd0, 0x95, 0xed, 0x87, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xe0, 0xb7, 0xbf, 0x81, 0x01, 0x00, 
  0x00, 0x1f, 0xcf, 0xb0, 0xcf, 0x37, 0xf6, 0x01, 0x00, 0xe0, 0x00, 0xbd, 0x1d, 0xc0, 0x01, 0x00, 
  0x00, 0xb3, 0xdd, 0xb0, 0xcd, 0x30, 0xbb, 0x01, 0x00, 0xe0, 0x00, 0xa0, 0x00, 0xc0, 0x01, 0x00, 
  0x00, 0xf3, 0xd8, 0xb0, 0xd9, 0x63, 0x1b, 0x03, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xff, 0x00, 0x00, 
  0x00, 0xff, 0xd8, 0xb0, 0xcf, 0xe3, 0x19, 0x03, 0x00, 0xc0, 0xff, 0x07, 0xf0, 0xff, 0x00, 0x00, 
  0x00, 0x8f, 0xd9, 0xb0, 0x4f, 0xe0, 0xb9, 0x01, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x87, 0x00, 0x00, 
  0x00, 0x83, 0xcf, 0xb7, 0xcd, 0xc7, 0xf0, 0x01, 0x00, 0x00, 0x00, 0xff, 0x3f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const unsigned char image_music_radio_broadcast_bits[] = {0xe0,0x03,0x18,0x0c,0xe4,0x13,0x12,0x24,0xc9,0x49,0x25,0x52,0x95,0x54,0xc5,0x51,0x60,0x03,0xc0,0x01,0x80,0x00,0xc0,0x01,0x40,0x01,0x60,0x03,0x20,0x02,0x00,0x00};
static const unsigned char image_Battery_bits[] = {0x00,0x00,0x00,0x00,0x80,0x01,0xc0,0x03,0x20,0x04,0x20,0x04,0xa0,0x05,0x20,0x04,0xa0,0x05,0x20,0x04,0xa0,0x05,0x20,0x04,0xc0,0x03,0x00,0x00,0x00,0x00,0x00,0x00};
static const unsigned char image_arrow_up_bits[] = {0x04,0x0e,0x15,0x04,0x04,0x04,0x04};
static const unsigned char image_arrow_down_bits[] = {0x04,0x04,0x04,0x04,0x15,0x0e,0x04};
static const unsigned char image_arrow_right_bits[] = {0x10,0x20,0x7f,0x20,0x10};
static const unsigned char image_arrow_left_bits[] = {0x04,0x02,0x7f,0x02,0x04};
static const unsigned char image_InfraredArrowUp_bits[] = {0x18,0x3c,0x7e,0xff};
static const unsigned char image_InfraredArrowDown_bits[] = {0xff,0x7e,0x3c,0x18};
static const unsigned char image_ButtonRight_bits[] = {0x01,0x03,0x07,0x0f,0x07,0x03,0x01};
static const unsigned char image_ButtonLeft_bits[] = {0x08,0x0c,0x0e,0x0f,0x0e,0x0c,0x08};

static const unsigned char mainScreen[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x60,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x68,
0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,
0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x02,0x01,0x00,0x04,0x02,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0xfe,0xff,0x03,0xfc,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0xff,0x3f,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x63,0x00,0xc0,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x22,0x00,0x80,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x00,
0x00,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x22,0x00,0x80,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x63,0x00,0xc0,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,
0xff,0x80,0xff,0x3f,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x01,0xf0,0xff,0xff,0x0f,0xf0,0xff,0xff,0x0f,0x80,0xff,0xff,0xff,0x00,0x00,
0x00,0x02,0x08,0x00,0x00,0x10,0x08,0x00,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x20,0x04,0x00,0x00,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x40,0x20,0x00,0x00,
0x00,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,
0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x40,0x00,0x00,0x00,0xff,0xff,0xff,0x01,0x01,0x00,0x00,0x80,0x01,
0x00,0x00,0x80,0x80,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0xf8,0xff,0x07,0x00,0x00,0xc0,0xff,0x1f,0x01,0x00,
0x00,0x80,0x01,0x00,0x00,0x80,0x04,0x00,0x08,0x00,0x00,0x20,0x00,0x20,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x02,0x00,0x10,0x00,0x00,0x10,0x00,0x40,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,
0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,
0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,
0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,
0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,
0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x00,0x80,0x01,0x00,0x20,0x00,0x00,0x08,0x00,0x80,0x02,0x00,0x00,0x40,0x02,0x00,0x00,0x40,0x01,0x00,0x20,0x00,0x00,0x10,0x00,0x40,
0x04,0x00,0x00,0x20,0x04,0x00,0x00,0x20,0x02,0x00,0x10,0x00,0x00,0x20,0x00,0x20,0x08,0x00,0x00,0x10,0x08,0x00,0x00,0x10,0x04,0x00,0x08,0x00,0x00,0xc0,0xff,0x1f,0xf0,0xff,0xff,0x0f,0xf0,0xff,0xff,0x0f,0xf8,0xff,0x07,0x00};

static const unsigned char settingScreen[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x00,0x00,0x00,0x00,0xf8,0xf9,0xf3,0xef,0x9f,0x9f,0x21,0x7c,0x48,0x00,0x00,0x90,0x60,0x00,0x00,0x00,0x8c,0x19,0xb3,
0x6d,0x1b,0x86,0x23,0x66,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x0c,0x19,0x92,0x29,0x13,0x86,0x23,0x43,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x0c,0x18,0x80,0x01,0x03,0x86,0x26,0x03,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,
0x38,0x98,0x80,0x01,0x03,0x86,0x26,0x03,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x00,0xf0,0xf8,0x80,0x01,0x03,0x86,0x2c,0x73,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0xc0,0x98,0x80,0x01,0x03,0x86,0x2c,0x63,0x48,0x00,0x00,0x90,0x68,
0x01,0x00,0x00,0x80,0x19,0x80,0x01,0x03,0x86,0x38,0x63,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x84,0x19,0x82,0x01,0x03,0x86,0x38,0x63,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x00,0x8c,0x19,0x83,0x01,0x03,0x86,0x30,0x66,0x48,0x00,
0x00,0x90,0x08,0x01,0x00,0x00,0xfc,0xf8,0x83,0x01,0x83,0x9f,0x20,0x7c,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x02,0x01,0x00,0x04,0x02,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0xfe,0xff,0x03,0xfc,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x04,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0xf0,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,
0xff,0xff,0xff,0xff,0x03,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x7c,0x18,0x1e,0xcf,0xe8,0xf3,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcc,0x18,0xb3,0xd9,0x68,0x36,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcc,0x18,0x83,0xc1,0x68,0x36,0x93,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xcc,0x3c,0x87,0xc3,0x6a,0x36,0x93,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x34,0x1e,0xcf,0xea,0x33,0x93,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x34,0x38,0xdc,0x6f,0x31,0x93,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x7e,0x30,0x98,0x67,0x33,0x93,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x62,0xb3,0x99,0x65,0x36,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x62,0x1e,0x8f,0x65,0xf6,
0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,
0xff,0xff,0xff,0x03,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x7f,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x00,0x00,0x00,0x00,0x80,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x07,0x00,0x00,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x18,0xfc,0x3e,0x00,0x12,0x18,0x8f,0x07,0x80,0xe1,0x78,0x00,
0x18,0x00,0x06,0xc8,0x27,0x30,0x66,0x18,0x12,0x9c,0xd9,0x0c,0xc0,0x31,0xcc,0x00,0x1c,0x00,0x07,0x24,0x48,0x30,0x66,0x18,0x12,0x9e,0xd9,0x0c,0xe0,0x19,0xcc,0x00,0x1c,0x80,0x07,0x92,0x93,0x30,0x66,0x18,0x12,0x9a,0x19,0x0c,0xa0,
0x19,0x58,0x00,0x1a,0x80,0x06,0x4a,0xa4,0x30,0x3e,0x00,0x12,0x18,0x1f,0x06,0x80,0xf9,0x78,0x00,0x1a,0x00,0x06,0x2a,0xa9,0x30,0x06,0x18,0x12,0x18,0x18,0x03,0x80,0x99,0xe9,0x00,0x19,0x00,0x06,0x8a,0xa3,0x30,0x06,0x18,0x12,0x18,
0x98,0x08,0x80,0x99,0xcd,0x00,0x3f,0x00,0x06,0xc0,0x06,0x30,0x06,0x18,0x12,0x18,0xcc,0x8f,0x81,0x99,0xcd,0x18,0x18,0x06,0x06,0x80,0x03,0xfc,0x06,0x00,0x21,0x18,0xc7,0x8f,0x81,0xf1,0x78,0x18,0x18,0x06,0x06,0x00,0x01,0x00,0x00,
0x80,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x7f,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

static const unsigned char MAINSC_MON[] U8X8_PROGMEM = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x60,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,
0x08,0x01,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,
0x00,0x00,0x90,0x68,0x01,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0x68,0x01,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x48,0x00,0x00,0x90,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x90,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x08,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x86,0x01,0x00,0x0c,0x03,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x01,0xfe,0xff,0x03,0xfc,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,
0x00,0x20,0x01,0x84,0xc7,0xf9,0x1c,0x82,0x9c,0xa8,0xcf,0x79,0x20,0x00,0x00,0x00,0x00,0x20,0x01,0x84,0x28,0x22,0x22,0xc6,0xa2,0x28,0x22,0x8a,0x20,0x00,0x00,0x00,0x00,0xe0,0x3d,0x84,0x28,0x22,0x22,0xaa,0xa2,0x29,0x22,0x8a,0x20,
0x00,0xb0,0x18,0x00,0x20,0x11,0x84,0xe8,0x23,0x3e,0x92,0xa2,0x2a,0x22,0x7a,0x20,0x00,0x50,0x0d,0x00,0x20,0x09,0x84,0x28,0x22,0x22,0x82,0xa2,0x2c,0x22,0x2a,0x20,0x00,0x50,0x11,0x00,0x20,0x3d,0x84,0x28,0x22,0x22,0x82,0xa2,0x28,
0x22,0x4a,0x20,0x00,0x50,0x0d,0x00,0x00,0x00,0x82,0x27,0x22,0x22,0x82,0x9c,0x28,0xc2,0x89,0x40,0x00,0x00,0x00,0xff,0xff,0xff,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x02,0x00,0x00,
0x00,0x00,0x00,0x20,0xe4,0x07,0x00,0x00,0x00,0x00,0x00,0x10,0x04,0x03,0x00,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x00,0x00,0x00,0x00,0x00,0x20,0x04,0x07,0x00,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x00,0x00,0x00,0x00,0x00,0x20,0x04,
0x07,0x06,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x03,0x00,0x00,0x00,0x00,0x20,0x84,0x06,0x06,0x00,0x00,0x00,0x00,0x40,0xe2,0x07,0x03,0x00,0x00,0x00,0x00,0x20,0x84,0x0c,0x06,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x03,0x00,0x00,0x00,
0x00,0x20,0x84,0x0f,0x00,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x00,0x00,0x00,0x00,0x00,0x20,0xc4,0x0c,0x06,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x03,0x00,0x00,0x00,0x00,0x20,0x44,0x18,0x06,0x00,0x00,0x00,0x00,0x40,0x62,0x0c,0x03,
0x00,0x00,0x00,0x00,0x20,0x48,0x18,0x06,0x00,0x00,0x00,0x00,0x20,0xe4,0x07,0x03,0x00,0x00,0x00,0x00,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0xc4,0x70,0x0e,0xe0,0x38,
0x1e,0xc3,0x48,0x8e,0x07,0x00,0x00,0x00,0x08,0x0e,0x20,0xc4,0x20,0x12,0x20,0x49,0x82,0x24,0x49,0x92,0x00,0x00,0x00,0x00,0x08,0x12,0x20,0x24,0x21,0x12,0x20,0x49,0x82,0x20,0x48,0x92,0x00,0x00,0x00,0x00,0x48,0x12,0x23,0x24,0x21,
0x0e,0x20,0x39,0x0e,0x41,0x48,0x8e,0xc3,0x00,0x00,0x00,0x28,0x12,0x24,0xe4,0x21,0x0a,0xe0,0x28,0x02,0x82,0x48,0x8a,0xc0,0x00,0x00,0x00,0x18,0x0e,0x27,0x24,0x21,0x0a,0x20,0x28,0x02,0x04,0x49,0x8a,0x00,0x00,0x00,0x00,0x28,0x82,
0x24,0x24,0x21,0x12,0x20,0x48,0x82,0x24,0x49,0x92,0xc0,0x00,0x00,0x00,0x48,0x82,0x24,0x24,0x71,0x12,0x20,0x48,0x1e,0xc3,0x30,0x92,0xc7,0x00,0x00,0x00,0x48,0x02,0x27,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0x08,0x00,0x00,0x00,0x80,0x20,0x00,0x00,0x00,
0x00,0x82,0x00,0x00,0x00,0x00,0x08,0x64,0x00,0x00,0x00,0x00,0x91,0x01,0x00,0x00,0x00,0x44,0x00,0x00,0x00,0x00,0x10,0xf2,0x00,0x00,0x00,0x00,0xca,0x03,0x00,0x00,0x00,0x28,0x06,0x00,0x00,0x00,0x20,0x0a,0x01,0x00,0x00,0x98,0x2a,
0x04,0x00,0x00,0x30,0x29,0x0f,0x00,0x00,0xc0,0x24,0x0a,0x01,0x00,0x00,0x98,0x2a,0x04,0x00,0x00,0x30,0xa9,0x10,0x00,0x00,0xc0,0x24,0x6a,0x01,0x00,0x00,0x98,0xaa,0x05,0x00,0x00,0x30,0xa9,0x10,0x00,0x00,0xc0,0x24,0x0a,0x01,0x00,
0x00,0xd8,0x2a,0x04,0x00,0x00,0xb0,0xa9,0x16,0x00,0x00,0xc0,0x26,0x6a,0x01,0x00,0x00,0xd0,0xaa,0x05,0x00,0x00,0xa0,0xa9,0x10,0x00,0x00,0x80,0x26,0x0a,0x01,0x00,0x00,0x70,0x2a,0x04,0x00,0x00,0xe0,0xa8,0x16,0x00,0x00,0x80,0x23,
0x6a,0x01,0x00,0x00,0x60,0xaa,0x05,0x00,0x00,0xc0,0xa8,0x10,0x00,0x00,0x00,0x23,0x0a,0x01,0x00,0x00,0x20,0x2a,0x04,0x00,0x00,0x40,0xa8,0x16,0x00,0x00,0x00,0x21,0xf2,0x00,0x00,0x00,0x00,0xca,0x03,0x00,0x00,0x00,0xa8,0x10,0x00,
0x00,0x00,0x20};

//==============================================oled Disp FUNC==============================================//X

void OledDisplaySend(){
  
  u8g2.clearBuffer();
  u8g2.drawXBM(0, 0, 128, 64, mainScreen);
  u8g2.setFont(u8g2_font_t0_18b_tr);
  switch(connStat){
    case 0 : u8g2.drawStr(1, 12, "ERROR");  break;
    case 1 : u8g2.drawStr(1, 12, "STANDBY");break;
    case 2 : u8g2.drawStr(1, 12, "CONN OK");break;
  }
  u8g2.drawStr(73, 12, "R3");                           // remote number
  String voltStr = String(batteryVoltage, 1);  
  u8g2.setFont(u8g2_font_5x7_tr);
  u8g2.drawStr(107, 10, voltStr.c_str());                       
  u8g2.drawStr(122, 10, "V");   

  u8g2.setFont(u8g2_font_helvB08_tr);
  for(uint8_t i = 0; i < 15; i++){                 
    sendData.stat[i] = !digitalRead(button[i]);
    if(sendData.stat[i]){
      switch(i){
        case 0 : u8g2.drawStr(36, 28, "L3");                                break;
        case 1 : u8g2.drawStr(114, 28, "R3");                               break;
        case 2 : u8g2.drawStr(19, 28, "L2");                                break;
        case 3 : u8g2.drawStr(2, 28, "L1");                                 break;
        case 4 : u8g2.drawXBMP(19, 45, 5, 7, image_arrow_up_bits);          break;
        case 5 : u8g2.drawXBMP(13, 51, 7, 5, image_arrow_left_bits);        break;
        case 6 : u8g2.drawXBMP(19, 55, 5, 7, image_arrow_down_bits);        break;
        case 7 : u8g2.drawXBMP(23, 51, 7, 5, image_arrow_right_bits);       break;
        case 8 : u8g2.drawXBMP(98, 50, 4, 7, image_ButtonLeft_bits);        break;
        case 9 : u8g2.drawXBMP(103, 58, 8, 4, image_InfraredArrowDown_bits);break;
        case 10 : u8g2.drawXBMP(112, 50, 4, 7, image_ButtonRight_bits);     break;
        case 11 : u8g2.drawXBMP(103, 45, 8, 4, image_InfraredArrowUp_bits); break;
        case 12 : u8g2.drawStr(96, 28, "R2");                               break;
        case 13 : u8g2.drawStr(78, 28, "R1");                               break;
        default : break;
      }
    }
  }
  u8g2.setFont(u8g2_font_haxrcorp4089_tr);
  switch(sendData.stat[14]){
    case 0 : u8g2.drawStr(54, 28, "OFF");break;
    case 1 : u8g2.drawStr(57, 28, "ON");break;
  }
  u8g2.setFont(u8g2_font_5x8_tr);
  String periodStr = String(periodMs);  
  u8g2.drawStr(106, 40, periodStr.c_str());
  u8g2.drawStr(116, 40, "ms");
  String freqStr = String(frequencyHz, 0);  
  u8g2.drawStr(3, 40, freqStr.c_str());
  u8g2.drawStr(13, 40, "Hz");
  u8g2.drawDisc(joy1XPos-1, joy1YPos, 3, U8G2_DRAW_ALL);
  u8g2.drawDisc(joy2XPos-1, joy2YPos, 3, U8G2_DRAW_ALL);
  u8g2.sendBuffer();
}

void OledMonitorSend(){
  
  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, 128, 64, MAINSC_MON);
  
  u8g2.setFont(u8g2_font_t0_18b_tr);
  switch(connStat){
    case 0 : u8g2.drawStr(1, 12, "ERROR");  break;
    case 1 : u8g2.drawStr(1, 12, "STANDBY");break;
    case 2 : u8g2.drawStr(1, 12, "CONN OK");break;
  }
  u8g2.drawStr(73, 12, "R3");                           // remote number
  String voltStr = String(batteryVoltage, 1);  
  u8g2.setFont(u8g2_font_5x7_tr);
  u8g2.drawStr(107, 10, voltStr.c_str());  
  
  u8g2.setFont(u8g2_font_5x8_tr);
  String freqStr = String(frequencyHz, 0);  
  u8g2.drawStr(3, 22, freqStr.c_str());                 // Hz Monitor
  String periodStr = String(periodMs);  
  u8g2.drawStr(106, 22, periodStr.c_str());             // ms Monitor
  
  u8g2.setFont(u8g2_font_t0_11_tr);
  String presStr = String(incomingData.pressureData); 
  u8g2.drawStr(88, 49, presStr.c_str());                // Air Pressure
  
  u8g2.setFont(u8g2_font_t0_15b_tr);
  String rpm1Str = String(incomingData.rpmData[0]); 
  String rpm2Str = String(incomingData.rpmData[1]); 
  u8g2.drawStr(21, 37, rpm1Str.c_str());            // RPM Monitor 1
  u8g2.drawStr(84, 37, rpm2Str.c_str());            // RPM Monitor 2
  
  u8g2.setFont(u8g2_font_t0_11b_tr);
  String v1Str = String(incomingData.voltData[0], 1); 
  String v2Str = String(incomingData.voltData[1], 1); 
  String v3Str = String(incomingData.voltData[2], 1); 
  u8g2.drawStr(11, 63, v1Str.c_str());              // V Monitor 1
  u8g2.drawStr(52, 63, v2Str.c_str());              // V Monitor 2
  u8g2.drawStr(94, 63, v3Str.c_str());              // V Monitor 3
  u8g2.sendBuffer();
}

void dispSplashLogo(){
  u8g2.setFontMode(1);
  u8g2.setBitmapMode(1);
  u8g2.setFont(u8g2_font_helvB08_tr);
  u8g2.drawStr(97, 8, "V3.6.3");
  u8g2.drawXBMP(0, 0, 128, 64, polinesLogo);
  u8g2.sendBuffer();
  delay(750);
  for (int i = 0; i <= 100; i = i + 7) {
    u8g2.clearBuffer();
    u8g2.drawXBMP(0, 0, 128, 45, polinesLogo);
    u8g2.drawRFrame(10, 48, 108, 14, 3);
    u8g2.drawBox(12, 50, i, 10); 
    u8g2.updateDisplayArea(0, 6, 16, 2);  //tile_area_x_pos, tile_area_y_pos, tile_area_width, tile_area_height
  }
}

void displaySetPage(){
  u8g2.clearBuffer();
  u8g2.setFontMode(1);
  u8g2.setBitmapMode(1);
  u8g2.drawXBM(0, 0, 128, 64, settingScreen);
  u8g2.setFont(u8g2_font_t0_18b_tr);
  u8g2.drawStr(73, 12, "R3");
  String voltStr = String(batteryVoltage, 1);  
  u8g2.setFont(u8g2_font_5x7_tr);
  u8g2.drawStr(107, 10, voltStr.c_str());                       
  u8g2.drawStr(123, 10, "V");   
  u8g2.setFont(u8g2_font_t0_11b_tr);
  u8g2.drawStr(5, 28, "SSID:SETUP_REMOTE_3");
  u8g2.setFont(u8g2_font_t0_13b_tr);
  u8g2.drawStr(59, 45, "LEXARGA24");
  u8g2.sendBuffer();
}

//  u8g2.drawRFrame(52, 17, 21, 14, 3);
//  u8g2.drawStr(1, 12, connectOk ? "CONN OK" : "ERROR"); //status data
//  u8g2.drawRFrame(-3, -3, 71, 18, 4);
//  u8g2.drawRFrame(70, -4, 23, 19, 4);
//  u8g2.drawXBM(94, -1, 16, 16, image_Battery_bits);     //battery logo
//  u8g2.drawRFrame(95, -4, 36, 19, 4);
//  u8g2.drawRFrame(-3, 17, 54, 14, 3);
//  u8g2.drawRFrame(74, 17, 58, 14, 3);
//  u8g2.drawRFrame(11, 43, 21, 21, 4);       //box for r/l
//  u8g2.drawRFrame(96, 42, 22, 22, 4);       //box for r/l
//  u8g2.drawRFrame(32, 32, 32, 32, 5);       //box for joystick
//  u8g2.drawRFrame(64, 32, 32, 32, 5);       //box for joystick
//  u8g2.drawFrame(joy1XBox - boxSize / 2, joy1YBox - boxSize / 2, boxSize, boxSize);
//  u8g2.drawFrame(joy2XBox - boxSize / 2, joy2YBox - boxSize / 2, boxSize, boxSize);
//  u8g2.updateDisplayArea(0, 2, 16, 6);
